from mapping_and_localization import map_and_localize

res = env.sim().reset()

size_of_map = 2000
cell_size = 0.002
x, y, ang = 0, 0, 0
mal = None

top_down_map = maps.get_topdown_map(env.sim(), map_resolution=(size_of_map, size_of_map), draw_border=True)
pos = get_informative_part(top_down_map)
top_down_map = top_down_map[pos[0]:pos[1], pos[2]:pos[3]]


c = ''
actions = {'w':1, 'a':2, 'd':3}
while(True):    
    fig, ax = plt.subplots(2, 2, figsize=(24, 24))
    
    
    # rgb view
    plt.subplot(2, 2, 1)
    plt.imshow(res['rgb'])
    plt.title('rgb observation')
    
    
    # evaluated map
    if mal == None:
        mal = map_and_localize(res['depth'][:,:,0], cell_size, x, y, ang)
    else:
        mal.update(res['depth'][:,:,0], c)
    
    plt.subplot(2, 2, 4)
    mal.draw_global_map(False)
    plt.title('created map with agent in pos = ({},{}) with angle = {}'.format(x, y, ang))
    
    
    # local map
    plt.subplot(2, 2, 3)
    mal.draw_local_map(False)
    plt.title('local map')
    
    
    
    # full real map
    plt.subplot(2, 2, 2)
    plt.imshow(top_down_map, cmap='gray')
    plt.title('real map')
    
    
    
    plt.show()
    
    c = input()
    if (c not in actions):
        break
    res = env.sim().step(action=actions[c])
    
    clear_output(True)